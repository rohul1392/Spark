{"ast":null,"code":"var _jsxFileName = \"/Users/stellardigitallimited01/Desktop/Spark/client/src/Components/ItemDetails/ActionItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useReducer, useEffect } from 'react';\nimport { Button, Box, makeStyles } from '@material-ui/core';\nimport { ShoppingCart as Cart, FlashOn as Flash } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useHistory } from 'react-router-dom';\nimport { LoginContext } from '../../context/ContextProvider';\nimport { payUsingPaytm } from '../../service/api';\nimport { post } from '../../utils/paytm'; // import { initialState, reducer } from '../../reducers/reducer';\n\nimport { addToCart } from '../../redux/actions/cartActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({\n  leftContainer: {\n    minWidth: '40%',\n    // textAlign: 'center',\n    padding: '40px 0 0 80px',\n    [theme.breakpoints.down('md')]: {\n      padding: '20px 40px'\n    }\n  },\n  productImage: {\n    padding: '15px 20px',\n    border: '1px solid #f0f0f0',\n    width: '95%'\n  },\n  button: {\n    width: '46%',\n    borderRadius: 2,\n    height: 50\n  },\n  addToCart: {\n    background: '#ff9f00',\n    color: '#FFF'\n  },\n  buyNow: {\n    background: '#fb641b',\n    color: '#FFF'\n  }\n}));\n\nconst ActionItem = ({\n  product\n}) => {\n  _s();\n\n  const classes = useStyle();\n  const history = useHistory();\n  const {\n    account\n  } = useContext(LoginContext);\n  const {\n    id,\n    price,\n    detailUrl,\n    title\n  } = product;\n  const [quantity, setQuantity] = useState(1);\n  const dispatch = useDispatch();\n\n  const buyNow = async () => {\n    let response = await payUsingPaytm({\n      amount: 500,\n      email: 'codeforinterview01@gmail.com'\n    });\n    var information = {\n      action: 'https://securegw-stage.paytm.in/order/process',\n      params: response\n    };\n    post(information);\n  };\n\n  const addItemToCart = () => {\n    dispatch(addToCart(id, quantity));\n    history.push('/cart');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.leftContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: 'https://rukminim1.flixcart.com/image/200/200/khf63680/cases-covers/back-cover/d/7/g/spigen-acs02256-original-imafxfgbffqaugur.jpeg?q=70',\n      className: classes.productImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 197\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: clsx(classes.button, classes.addToCart),\n      style: {\n        marginRight: 10\n      },\n      variant: \"contained\",\n      children: [/*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 120\n      }, this), \"Add to Cart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: clsx(classes.button, classes.buyNow),\n      variant: \"contained\",\n      children: [/*#__PURE__*/_jsxDEV(Flash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 91\n      }, this), \" Buy Now\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActionItem, \"DpiRFzY18/hHAXi68PKovF+Ofbw=\", false, function () {\n  return [useStyle, useHistory, useDispatch];\n});\n\n_c = ActionItem;\nexport default ActionItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionItem\");","map":{"version":3,"sources":["/Users/stellardigitallimited01/Desktop/Spark/client/src/Components/ItemDetails/ActionItem.jsx"],"names":["useState","useContext","useReducer","useEffect","Button","Box","makeStyles","ShoppingCart","Cart","FlashOn","Flash","clsx","useHistory","LoginContext","payUsingPaytm","post","addToCart","useSelector","useDispatch","useStyle","theme","leftContainer","minWidth","padding","breakpoints","down","productImage","border","width","button","borderRadius","height","background","color","buyNow","ActionItem","product","classes","history","account","id","price","detailUrl","title","quantity","setQuantity","dispatch","response","amount","email","information","action","params","addItemToCart","push","marginRight"],"mappings":"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","sourcesContent":["import { useState, useContext, useReducer, useEffect } from 'react';\nimport { Button, Box, makeStyles } from '@material-ui/core';\nimport { ShoppingCart as Cart, FlashOn as Flash } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useHistory } from 'react-router-dom';\nimport { LoginContext } from '../../context/ContextProvider';\nimport { payUsingPaytm } from '../../service/api';\nimport { post } from '../../utils/paytm';\n// import { initialState, reducer } from '../../reducers/reducer';\nimport { addToCart } from '../../redux/actions/cartActions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst useStyle = makeStyles(theme => ({\n    leftContainer: {\n        minWidth: '40%',\n        // textAlign: 'center',\n        padding: '40px 0 0 80px',\n        [theme.breakpoints.down('md')]: {\n            padding: '20px 40px'\n        }\n    },\n    productImage: {\n        padding: '15px 20px',\n        border: '1px solid #f0f0f0',\n        width: '95%'\n    },\n    button: {\n        width: '46%',\n        borderRadius: 2,\n        height: 50\n    },\n    addToCart: {\n        background: '#ff9f00',\n        color: '#FFF'\n    },\n    buyNow:{\n        background: '#fb641b',\n        color: '#FFF'\n    }\n}));\n\nconst ActionItem = ({ product }) => {\n    const classes = useStyle();\n    const history = useHistory();\n    const { account } = useContext(LoginContext);\n    const { id, price, detailUrl, title } = product;\n        \n    const [quantity, setQuantity] = useState(1);\n    const dispatch = useDispatch();\n\n    const buyNow = async () => {\n        let response = await payUsingPaytm({ amount: 500, email: 'codeforinterview01@gmail.com'});\n        var information = {\n            action: 'https://securegw-stage.paytm.in/order/process',\n            params: response    \n        }\n        post(information);\n    }\n\n    const addItemToCart = () => {\n        dispatch(addToCart(id, quantity));\n        history.push('/cart');\n    }\n\n    return (\n        <Box className={classes.leftContainer}>\n            <img src={'https://rukminim1.flixcart.com/image/200/200/khf63680/cases-covers/back-cover/d/7/g/spigen-acs02256-original-imafxfgbffqaugur.jpeg?q=70'} className={classes.productImage} /><br />\n            <Button  className={clsx(classes.button, classes.addToCart)} style={{marginRight: 10}} variant=\"contained\"><Cart />Add to Cart</Button>\n            <Button  className={clsx(classes.button, classes.buyNow)} variant=\"contained\"><Flash /> Buy Now</Button>\n        </Box>\n    )\n}\n\nexport default ActionItem;"]},"metadata":{},"sourceType":"module"}