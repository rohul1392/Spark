{"ast":null,"code":"var _jsxFileName = \"/Users/stellardigitallimited01/Desktop/Spark/client/src/Components/Login/LoginDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, TextField, Box, Button, makeStyles, Typography } from '@material-ui/core';\nimport { authenticateLogin, authenticateSignup } from '../../service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  component: {\n    height: '70vh',\n    width: '90vh',\n    maxWidth: 'unset !important'\n  },\n  image: {\n    backgroundImage: `url(${'https://static-assets-web.flixcart.com/www/linchpin/fk-cp-zion/img/login_img_c4a81e.png'})`,\n    background: '#2874f0',\n    backgroundPosition: 'center 85%',\n    backgroundRepeat: 'no-repeat',\n    height: '70vh',\n    width: '40%',\n    padding: '45px 35px',\n    '& > *': {\n      color: '#FFFFFF',\n      fontWeight: 600\n    }\n  },\n  login: {\n    padding: '25px 35px',\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    '& > *': {\n      marginTop: 20\n    }\n  },\n  loginbtn: {\n    textTransform: 'none',\n    background: '#FB641B',\n    color: '#fff',\n    height: 48,\n    borderRadius: 2\n  },\n  requestbtn: {\n    textTransform: 'none',\n    background: '#fff',\n    color: '#2874f0',\n    height: 48,\n    borderRadius: 2,\n    boxShadow: '0 2px 4px 0 rgb(0 0 0 / 20%)'\n  },\n  text: {\n    color: '#878787',\n    fontSize: 12\n  },\n  createText: {\n    margin: 'auto 0 5px 0',\n    textAlign: 'center',\n    color: '#2874f0',\n    fontWeight: 600,\n    fontSize: 14,\n    cursor: 'pointer'\n  },\n  error: {\n    fontSize: 10,\n    color: '#ff6161',\n    lineHeight: 0,\n    marginTop: 10,\n    fontWeight: 600\n  }\n});\nconst loginInitialValues = {\n  username: '',\n  password: ''\n};\nconst signupInitialValues = {\n  firstname: '',\n  lastname: '',\n  username: '',\n  email: '',\n  password: '',\n  phone: ''\n};\nconst accountInitialValues = {\n  login: {\n    view: 'login',\n    heading: 'Login',\n    subHeading: 'Get access to your Orders, Wishlist and Recommendations'\n  },\n  signup: {\n    view: 'signup',\n    heading: \"Looks like you're new here\",\n    subHeading: 'Signup to get started'\n  }\n};\n\nconst LoginDialog = ({\n  open,\n  setOpen,\n  setAccount\n}) => {\n  _s();\n\n  const classes = useStyle();\n  const [login, setLogin] = useState(loginInitialValues);\n  const [signup, setSignup] = useState(signupInitialValues);\n  const [error, showError] = useState(false);\n  const [account, toggleAccount] = useState(accountInitialValues.login);\n  useEffect(() => {\n    showError(false);\n  }, [login]);\n\n  const onValueChange = e => {\n    setLogin({ ...login,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onInputChange = e => {\n    setSignup({ ...signup,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const loginUser = async () => {\n    let response = await authenticateLogin(login);\n    if (!response) showError(true);else {\n      showError(false);\n      handleClose();\n      setAccount(login.username);\n    }\n  };\n\n  const signupUser = async () => {\n    let response = await authenticateSignup(signup);\n    if (!response) return;\n    handleClose();\n    setAccount(signup.username);\n  };\n\n  const toggleSignup = () => {\n    toggleAccount(accountInitialValues.signup);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    toggleAccount(accountInitialValues.login);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: classes.component,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.image,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: account.heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginTop: 20\n            },\n            children: account.subHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), account.view === 'login' ? /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.login,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onValueChange(e),\n            name: \"username\",\n            label: \"Enter Email/Mobile number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.error,\n            children: \"Please enter valid Email ID/Mobile number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onValueChange(e),\n            name: \"password\",\n            label: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.text,\n            children: \"By continuing, you agree to Pizza King's Terms of Use and Privacy Policy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.loginbtn,\n            onClick: () => loginUser(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.text,\n            style: {\n              textAlign: 'center'\n            },\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.requestbtn,\n            children: \"Request OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.createText,\n            onClick: () => toggleSignup(),\n            children: \"New to Pizza King? Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.login,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onInputChange(e),\n            name: \"firstname\",\n            label: \"Enter Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onInputChange(e),\n            name: \"lastname\",\n            label: \"Enter Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onInputChange(e),\n            name: \"username\",\n            label: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onInputChange(e),\n            name: \"email\",\n            label: \"Enter Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onInputChange(e),\n            name: \"password\",\n            label: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => onInputChange(e),\n            name: \"phone\",\n            label: \"Enter Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.loginbtn,\n            onClick: () => signupUser(),\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginDialog, \"0+/MoODqwnCG7xr27s5fma0jVtA=\", false, function () {\n  return [useStyle];\n});\n\n_c = LoginDialog;\nexport default LoginDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginDialog\");","map":{"version":3,"sources":["/Users/stellardigitallimited01/Desktop/Spark/client/src/Components/Login/LoginDialog.jsx"],"names":["React","useState","useEffect","Dialog","DialogContent","TextField","Box","Button","makeStyles","Typography","authenticateLogin","authenticateSignup","useStyle","component","height","width","maxWidth","image","backgroundImage","background","backgroundPosition","backgroundRepeat","padding","color","fontWeight","login","display","flex","flexDirection","marginTop","loginbtn","textTransform","borderRadius","requestbtn","boxShadow","text","fontSize","createText","margin","textAlign","cursor","error","lineHeight","loginInitialValues","username","password","signupInitialValues","firstname","lastname","email","phone","accountInitialValues","view","heading","subHeading","signup","LoginDialog","open","setOpen","setAccount","classes","setLogin","setSignup","showError","account","toggleAccount","onValueChange","e","target","name","value","onInputChange","loginUser","response","handleClose","signupUser","toggleSignup"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, TextField, Box, Button, makeStyles, Typography } from '@material-ui/core';\nimport { authenticateLogin, authenticateSignup } from '../../service/api';\n\nconst useStyle = makeStyles({\n    component: {\n        height: '70vh',\n        width: '90vh',\n        maxWidth: 'unset !important'\n    },\n    image: {\n        backgroundImage: `url(${'https://static-assets-web.flixcart.com/www/linchpin/fk-cp-zion/img/login_img_c4a81e.png'})`,\n        background: '#2874f0',\n        backgroundPosition: 'center 85%',\n        backgroundRepeat: 'no-repeat',\n        height: '70vh',\n        width: '40%',\n        padding: '45px 35px',\n        '& > *': {\n            color: '#FFFFFF',\n            fontWeight: 600\n        }\n    },\n    login: {\n        padding: '25px 35px',\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        '& > *': {\n            marginTop: 20\n        }\n    },\n    loginbtn: {\n        textTransform: 'none',\n        background: '#FB641B',\n        color: '#fff',\n        height: 48,\n        borderRadius: 2\n    },\n    requestbtn: {\n        textTransform: 'none',\n        background: '#fff',\n        color: '#2874f0',\n        height: 48,\n        borderRadius: 2,\n        boxShadow: '0 2px 4px 0 rgb(0 0 0 / 20%)'\n    },\n    text: {\n        color: '#878787',\n        fontSize: 12\n    },\n    createText: {\n        margin: 'auto 0 5px 0',\n        textAlign: 'center',\n        color: '#2874f0',\n        fontWeight: 600,\n        fontSize: 14,\n        cursor: 'pointer'\n    },\n    error: {\n        fontSize: 10,\n        color: '#ff6161',\n        lineHeight: 0,\n        marginTop: 10,\n        fontWeight: 600\n    }\n})\n\nconst loginInitialValues = {\n    username: '',\n    password: ''\n};\n\nconst signupInitialValues = {\n    firstname: '',\n    lastname: '',\n    username: '',\n    email: '',\n    password: '',\n    phone: ''\n};\n\nconst accountInitialValues = {\n    login: {\n        view: 'login',\n        heading: 'Login',\n        subHeading: 'Get access to your Orders, Wishlist and Recommendations'\n    },\n    signup: {\n        view: 'signup',\n        heading: \"Looks like you're new here\",\n        subHeading: 'Signup to get started'\n    }\n}\n\nconst LoginDialog = ({ open, setOpen, setAccount }) => {\n    const classes = useStyle();\n    const [ login, setLogin ] = useState(loginInitialValues);\n    const [ signup, setSignup ] = useState(signupInitialValues);\n    const [ error, showError] = useState(false);\n    const [ account, toggleAccount ] = useState(accountInitialValues.login);\n\n    useEffect(() => {\n        showError(false);\n    }, [login])\n\n    const onValueChange = (e) => {\n        setLogin({ ...login, [e.target.name]: e.target.value });\n    }\n\n    const onInputChange = (e) => {\n        setSignup({ ...signup, [e.target.name]: e.target.value });\n    }\n\n    const loginUser = async() => {\n        let response = await authenticateLogin(login);\n        if(!response) \n            showError(true);\n        else {\n            showError(false);\n            handleClose();\n            setAccount(login.username);\n        }\n    }\n\n    const signupUser = async() => {\n        let response = await authenticateSignup(signup);\n        if(!response) return;\n        handleClose();\n        setAccount(signup.username);\n    }\n    \n    const toggleSignup = () => {\n        toggleAccount(accountInitialValues.signup);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        toggleAccount(accountInitialValues.login);\n    }\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogContent className={classes.component} >\n                <Box style={{display: 'flex'}}>\n                    <Box className={classes.image}>\n                        <Typography variant=\"h5\">{account.heading}</Typography>\n                        <Typography style={{marginTop: 20}}>{account.subHeading}</Typography>\n                    </Box>\n                    {\n                        account.view === 'login' ? \n                        <Box className={classes.login}>\n                            <TextField onChange={(e) => onValueChange(e)} name='username' label='Enter Email/Mobile number' />\n                            { error && <Typography className={classes.error}>Please enter valid Email ID/Mobile number</Typography> }\n                            <TextField onChange={(e) => onValueChange(e)} name='password' label='Enter Password' />\n                            <Typography className={classes.text}>By continuing, you agree to Pizza King's Terms of Use and Privacy Policy.</Typography>\n                            <Button className={classes.loginbtn} onClick={() => loginUser()} >Login</Button>\n                            <Typography className={classes.text} style={{textAlign:'center'}}>OR</Typography>\n                            <Button className={classes.requestbtn}>Request OTP</Button>\n                            <Typography className={classes.createText} onClick={() => toggleSignup()}>New to Pizza King? Create an account</Typography>\n                        </Box> : \n                        <Box className={classes.login}>\n                            <TextField onChange={(e) => onInputChange(e)} name='firstname' label='Enter Firstname' />\n                            <TextField onChange={(e) => onInputChange(e)} name='lastname' label='Enter Lastname' />\n                            <TextField onChange={(e) => onInputChange(e)} name='username' label='Enter Username' />\n                            <TextField onChange={(e) => onInputChange(e)} name='email' label='Enter Email' />\n                            <TextField onChange={(e) => onInputChange(e)} name='password' label='Enter Password' />\n                            <TextField onChange={(e) => onInputChange(e)} name='phone' label='Enter Phone' />\n                            <Button className={classes.loginbtn} onClick={() => signupUser()} >Continue</Button>\n                        </Box>\n                    }\n                </Box>\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default LoginDialog;"]},"metadata":{},"sourceType":"module"}